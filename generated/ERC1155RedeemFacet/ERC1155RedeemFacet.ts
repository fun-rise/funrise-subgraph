// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ComissionPayed extends ethereum.Event {
  get params(): ComissionPayed__Params {
    return new ComissionPayed__Params(this);
  }
}

export class ComissionPayed__Params {
  _event: ComissionPayed;

  constructor(event: ComissionPayed) {
    this._event = event;
  }

  get paymentToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get buyer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get receiver(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class FixedPriceERC1155BundleRedeemed extends ethereum.Event {
  get params(): FixedPriceERC1155BundleRedeemed__Params {
    return new FixedPriceERC1155BundleRedeemed__Params(this);
  }
}

export class FixedPriceERC1155BundleRedeemed__Params {
  _event: FixedPriceERC1155BundleRedeemed;

  constructor(event: FixedPriceERC1155BundleRedeemed) {
    this._event = event;
  }

  get tokens(): Array<Address> {
    return this._event.parameters[0].value.toAddressArray();
  }

  get paymentToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get ids(): Array<BigInt> {
    return this._event.parameters[4].value.toBigIntArray();
  }

  get amounts(): Array<BigInt> {
    return this._event.parameters[5].value.toBigIntArray();
  }

  get prices(): Array<BigInt> {
    return this._event.parameters[6].value.toBigIntArray();
  }
}

export class FixedPriceERC1155Redeemed extends ethereum.Event {
  get params(): FixedPriceERC1155Redeemed__Params {
    return new FixedPriceERC1155Redeemed__Params(this);
  }
}

export class FixedPriceERC1155Redeemed__Params {
  _event: FixedPriceERC1155Redeemed;

  constructor(event: FixedPriceERC1155Redeemed) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get paymentToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class RoyaltyPayed extends ethereum.Event {
  get params(): RoyaltyPayed__Params {
    return new RoyaltyPayed__Params(this);
  }
}

export class RoyaltyPayed__Params {
  _event: RoyaltyPayed;

  constructor(event: RoyaltyPayed) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get paymentToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get buyer(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get receiver(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get value(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class ERC1155RedeemFacet extends ethereum.SmartContract {
  static bind(address: Address): ERC1155RedeemFacet {
    return new ERC1155RedeemFacet("ERC1155RedeemFacet", address);
  }
}

export class ERC1155MintRedeemCall extends ethereum.Call {
  get inputs(): ERC1155MintRedeemCall__Inputs {
    return new ERC1155MintRedeemCall__Inputs(this);
  }

  get outputs(): ERC1155MintRedeemCall__Outputs {
    return new ERC1155MintRedeemCall__Outputs(this);
  }
}

export class ERC1155MintRedeemCall__Inputs {
  _call: ERC1155MintRedeemCall;

  constructor(call: ERC1155MintRedeemCall) {
    this._call = call;
  }

  get mintOrder(): ERC1155MintRedeemCallMintOrderStruct {
    return changetype<ERC1155MintRedeemCallMintOrderStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get redeemOrder(): ERC1155MintRedeemCallRedeemOrderStruct {
    return changetype<ERC1155MintRedeemCallRedeemOrderStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }

  get marketSignature(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get mintSignature(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get redeemSignature(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class ERC1155MintRedeemCall__Outputs {
  _call: ERC1155MintRedeemCall;

  constructor(call: ERC1155MintRedeemCall) {
    this._call = call;
  }
}

export class ERC1155MintRedeemCallMintOrderStruct extends ethereum.Tuple {
  get token(): Address {
    return this[0].toAddress();
  }

  get to(): Address {
    return this[1].toAddress();
  }

  get id(): BigInt {
    return this[2].toBigInt();
  }

  get amount(): BigInt {
    return this[3].toBigInt();
  }

  get uri(): string {
    return this[4].toString();
  }

  get royalty(): ERC1155MintRedeemCallMintOrderRoyaltyStruct {
    return changetype<ERC1155MintRedeemCallMintOrderRoyaltyStruct>(
      this[5].toTuple()
    );
  }
}

export class ERC1155MintRedeemCallMintOrderRoyaltyStruct extends ethereum.Tuple {
  get recipient(): Address {
    return this[0].toAddress();
  }

  get amount(): i32 {
    return this[1].toI32();
  }
}

export class ERC1155MintRedeemCallRedeemOrderStruct extends ethereum.Tuple {
  get token(): Address {
    return this[0].toAddress();
  }

  get paymentToken(): Address {
    return this[1].toAddress();
  }

  get targetToken(): Address {
    return this[2].toAddress();
  }

  get from(): Address {
    return this[3].toAddress();
  }

  get to(): Address {
    return this[4].toAddress();
  }

  get id(): BigInt {
    return this[5].toBigInt();
  }

  get amount(): BigInt {
    return this[6].toBigInt();
  }

  get price(): BigInt {
    return this[7].toBigInt();
  }
}

export class ERC1155RedeemCall extends ethereum.Call {
  get inputs(): ERC1155RedeemCall__Inputs {
    return new ERC1155RedeemCall__Inputs(this);
  }

  get outputs(): ERC1155RedeemCall__Outputs {
    return new ERC1155RedeemCall__Outputs(this);
  }
}

export class ERC1155RedeemCall__Inputs {
  _call: ERC1155RedeemCall;

  constructor(call: ERC1155RedeemCall) {
    this._call = call;
  }

  get order(): ERC1155RedeemCallOrderStruct {
    return changetype<ERC1155RedeemCallOrderStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get signature(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class ERC1155RedeemCall__Outputs {
  _call: ERC1155RedeemCall;

  constructor(call: ERC1155RedeemCall) {
    this._call = call;
  }
}

export class ERC1155RedeemCallOrderStruct extends ethereum.Tuple {
  get token(): Address {
    return this[0].toAddress();
  }

  get paymentToken(): Address {
    return this[1].toAddress();
  }

  get targetToken(): Address {
    return this[2].toAddress();
  }

  get from(): Address {
    return this[3].toAddress();
  }

  get to(): Address {
    return this[4].toAddress();
  }

  get id(): BigInt {
    return this[5].toBigInt();
  }

  get amount(): BigInt {
    return this[6].toBigInt();
  }

  get price(): BigInt {
    return this[7].toBigInt();
  }
}

export class ERC1155RedeemBundleCall extends ethereum.Call {
  get inputs(): ERC1155RedeemBundleCall__Inputs {
    return new ERC1155RedeemBundleCall__Inputs(this);
  }

  get outputs(): ERC1155RedeemBundleCall__Outputs {
    return new ERC1155RedeemBundleCall__Outputs(this);
  }
}

export class ERC1155RedeemBundleCall__Inputs {
  _call: ERC1155RedeemBundleCall;

  constructor(call: ERC1155RedeemBundleCall) {
    this._call = call;
  }

  get order(): ERC1155RedeemBundleCallOrderStruct {
    return changetype<ERC1155RedeemBundleCallOrderStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get signature(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class ERC1155RedeemBundleCall__Outputs {
  _call: ERC1155RedeemBundleCall;

  constructor(call: ERC1155RedeemBundleCall) {
    this._call = call;
  }
}

export class ERC1155RedeemBundleCallOrderStruct extends ethereum.Tuple {
  get tokens(): Array<Address> {
    return this[0].toAddressArray();
  }

  get paymentToken(): Address {
    return this[1].toAddress();
  }

  get targetToken(): Address {
    return this[2].toAddress();
  }

  get from(): Address {
    return this[3].toAddress();
  }

  get to(): Address {
    return this[4].toAddress();
  }

  get ids(): Array<BigInt> {
    return this[5].toBigIntArray();
  }

  get amounts(): Array<BigInt> {
    return this[6].toBigIntArray();
  }

  get prices(): Array<BigInt> {
    return this[7].toBigIntArray();
  }
}
