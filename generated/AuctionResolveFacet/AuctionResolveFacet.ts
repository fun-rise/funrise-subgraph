// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AuctionBidReturned extends ethereum.Event {
  get params(): AuctionBidReturned__Params {
    return new AuctionBidReturned__Params(this);
  }
}

export class AuctionBidReturned__Params {
  _event: AuctionBidReturned;

  constructor(event: AuctionBidReturned) {
    this._event = event;
  }

  get bundleId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get bidder(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class AuctionResolved extends ethereum.Event {
  get params(): AuctionResolved__Params {
    return new AuctionResolved__Params(this);
  }
}

export class AuctionResolved__Params {
  _event: AuctionResolved;

  constructor(event: AuctionResolved) {
    this._event = event;
  }

  get bundleId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get result(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class ComissionPayed extends ethereum.Event {
  get params(): ComissionPayed__Params {
    return new ComissionPayed__Params(this);
  }
}

export class ComissionPayed__Params {
  _event: ComissionPayed;

  constructor(event: ComissionPayed) {
    this._event = event;
  }

  get paymentToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get buyer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get receiver(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class RoyaltyPayed extends ethereum.Event {
  get params(): RoyaltyPayed__Params {
    return new RoyaltyPayed__Params(this);
  }
}

export class RoyaltyPayed__Params {
  _event: RoyaltyPayed;

  constructor(event: RoyaltyPayed) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get paymentToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get buyer(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get receiver(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get value(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class AuctionResolveFacet extends ethereum.SmartContract {
  static bind(address: Address): AuctionResolveFacet {
    return new AuctionResolveFacet("AuctionResolveFacet", address);
  }
}

export class AuctionResolveCall extends ethereum.Call {
  get inputs(): AuctionResolveCall__Inputs {
    return new AuctionResolveCall__Inputs(this);
  }

  get outputs(): AuctionResolveCall__Outputs {
    return new AuctionResolveCall__Outputs(this);
  }
}

export class AuctionResolveCall__Inputs {
  _call: AuctionResolveCall;

  constructor(call: AuctionResolveCall) {
    this._call = call;
  }

  get order(): AuctionResolveCallOrderStruct {
    return changetype<AuctionResolveCallOrderStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get signature(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class AuctionResolveCall__Outputs {
  _call: AuctionResolveCall;

  constructor(call: AuctionResolveCall) {
    this._call = call;
  }
}

export class AuctionResolveCallOrderStruct extends ethereum.Tuple {
  get bundleId(): BigInt {
    return this[0].toBigInt();
  }

  get accept(): boolean {
    return this[1].toBoolean();
  }
}
