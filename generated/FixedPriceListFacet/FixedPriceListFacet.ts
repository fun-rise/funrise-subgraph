// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class FixedPriceBundleListed extends ethereum.Event {
  get params(): FixedPriceBundleListed__Params {
    return new FixedPriceBundleListed__Params(this);
  }
}

export class FixedPriceBundleListed__Params {
  _event: FixedPriceBundleListed;

  constructor(event: FixedPriceBundleListed) {
    this._event = event;
  }

  get bundleId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get paymentToken(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get tokens(): Array<Address> {
    return this._event.parameters[3].value.toAddressArray();
  }

  get ids(): Array<BigInt> {
    return this._event.parameters[4].value.toBigIntArray();
  }

  get amounts(): Array<BigInt> {
    return this._event.parameters[5].value.toBigIntArray();
  }

  get prices(): Array<BigInt> {
    return this._event.parameters[6].value.toBigIntArray();
  }

  get standards(): Array<i32> {
    return this._event.parameters[7].value.toI32Array();
  }

  get listingTime(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get state(): i32 {
    return this._event.parameters[9].value.toI32();
  }
}

export class FixedPriceBundleUnlisted extends ethereum.Event {
  get params(): FixedPriceBundleUnlisted__Params {
    return new FixedPriceBundleUnlisted__Params(this);
  }
}

export class FixedPriceBundleUnlisted__Params {
  _event: FixedPriceBundleUnlisted;

  constructor(event: FixedPriceBundleUnlisted) {
    this._event = event;
  }

  get bundleId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class FixedPriceListFacet extends ethereum.SmartContract {
  static bind(address: Address): FixedPriceListFacet {
    return new FixedPriceListFacet("FixedPriceListFacet", address);
  }
}

export class FixedPriceListBundleCall extends ethereum.Call {
  get inputs(): FixedPriceListBundleCall__Inputs {
    return new FixedPriceListBundleCall__Inputs(this);
  }

  get outputs(): FixedPriceListBundleCall__Outputs {
    return new FixedPriceListBundleCall__Outputs(this);
  }
}

export class FixedPriceListBundleCall__Inputs {
  _call: FixedPriceListBundleCall;

  constructor(call: FixedPriceListBundleCall) {
    this._call = call;
  }

  get order(): FixedPriceListBundleCallOrderStruct {
    return changetype<FixedPriceListBundleCallOrderStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class FixedPriceListBundleCall__Outputs {
  _call: FixedPriceListBundleCall;

  constructor(call: FixedPriceListBundleCall) {
    this._call = call;
  }
}

export class FixedPriceListBundleCallOrderStruct extends ethereum.Tuple {
  get owner(): Address {
    return this[0].toAddress();
  }

  get paymentToken(): Address {
    return this[1].toAddress();
  }

  get targetToken(): Address {
    return this[2].toAddress();
  }

  get bundleId(): BigInt {
    return this[3].toBigInt();
  }

  get tokens(): Array<Address> {
    return this[4].toAddressArray();
  }

  get ids(): Array<BigInt> {
    return this[5].toBigIntArray();
  }

  get amounts(): Array<BigInt> {
    return this[6].toBigIntArray();
  }

  get prices(): Array<BigInt> {
    return this[7].toBigIntArray();
  }

  get uris(): Array<string> {
    return this[8].toStringArray();
  }

  get standards(): Array<i32> {
    return this[9].toI32Array();
  }

  get royalties(): Array<FixedPriceListBundleCallOrderRoyaltiesStruct> {
    return this[10].toTupleArray<
      FixedPriceListBundleCallOrderRoyaltiesStruct
    >();
  }

  get minted(): boolean {
    return this[11].toBoolean();
  }
}

export class FixedPriceListBundleCallOrderRoyaltiesStruct extends ethereum.Tuple {
  get recipient(): Address {
    return this[0].toAddress();
  }

  get amount(): i32 {
    return this[1].toI32();
  }
}

export class FixedPriceUnlistBundleCall extends ethereum.Call {
  get inputs(): FixedPriceUnlistBundleCall__Inputs {
    return new FixedPriceUnlistBundleCall__Inputs(this);
  }

  get outputs(): FixedPriceUnlistBundleCall__Outputs {
    return new FixedPriceUnlistBundleCall__Outputs(this);
  }
}

export class FixedPriceUnlistBundleCall__Inputs {
  _call: FixedPriceUnlistBundleCall;

  constructor(call: FixedPriceUnlistBundleCall) {
    this._call = call;
  }

  get order(): FixedPriceUnlistBundleCallOrderStruct {
    return changetype<FixedPriceUnlistBundleCallOrderStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class FixedPriceUnlistBundleCall__Outputs {
  _call: FixedPriceUnlistBundleCall;

  constructor(call: FixedPriceUnlistBundleCall) {
    this._call = call;
  }
}

export class FixedPriceUnlistBundleCallOrderStruct extends ethereum.Tuple {
  get owner(): Address {
    return this[0].toAddress();
  }

  get bundleId(): BigInt {
    return this[1].toBigInt();
  }
}
